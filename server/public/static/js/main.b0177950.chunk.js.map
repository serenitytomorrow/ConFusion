{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/CommentForm.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/Test.js","components/AboutComponent.js","components/HomeComponent.js","components/ContactComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","CommentForm","handleBlur","field","evt","setState","touched","state","isModalOpen","author","comment","rating","toggleModal","bind","handleInputChange","handleSubmit","this","event","target","value","type","checked","values","alert","JSON","stringify","ratingChecked","postComment","dishId","resetFeedbackForm","errors","Button","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","minLength","show","messages","select","textarea","rows","size","offset","color","Component","RenderDish","description","RenderComments","comments","in","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","transformProps","exitTransform","top","CardBody","CardText","Header","toggleNav","isNavOpen","handleLogin","username","password","remember","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderLeader","leadersList","leaders","leader","Media","tag","left","object","data-src","body","heading","designation","About","CardHeader","title","list","console","log","RenderCard","item","CardSubtitle","Home","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leadersLoading","leadersErrMess","isNumber","isNaN","Number","validEmail","test","Contact","firstname","lastname","telnum","email","agree","contactType","message","postFeedback","validate","role","dishesFailed","errmess","payload","addDishes","leadersFailed","addLeaders","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","Main","promotions","fetchDishes","fetchComments","fetchLeaders","fetchPromos","selectedDish","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promo","exact","match","tmp1","tmp2","parseInt","params","commentsErrMess","Test","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","newComment","toISOString","method","headers","credentials","addComment","newFeedback","firstName","lastName","contactTel","feedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","React","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0177950.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};\n","export const baseUrl = 'http://localhost:3001/';\n","import React from 'react';\nimport { Media, ListGroup, ListGroupItem } from 'reactstrap';\nimport { Card, CardImg, CardImgOverlay,\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\n    function RenderMenuItem ({dish, onClick}) {\n        return (\n            <Card>\n                <Link to={`/menu/${dish.id}`} >\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                    <CardImgOverlay>\n                        <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\n                </Link>\n            </Card>\n        );\n    }\n\n    const Menu = (props) => {\n        const menu = props.dishes.dishes.map((dish) => {\n            return (\n                <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\n                    <RenderMenuItem dish={dish} onClick={props.onClick} />\n                </div>\n            );\n        });\n\n        if (props.dishes.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dishes.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h4>{props.dishes.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n    }\n\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport { Media, ListGroup, ListGroupItem } from 'reactstrap';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\n\nexport default class CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false,\n            author: '',\n            comment: '',\n            rating: '',\n            touched: {\n                author: false,\n                comment: false,\n                rating: false\n            }\n        };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleInputChange(event) {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n\n      this.setState({\n        [name]: value\n      });\n  }\n\n  handleSubmit(values) {\n      this.toggleModal();\n      alert(JSON.stringify(values));\n      const ratingChecked = values.rating ? values.rating : 1;\n      this.props.postComment(this.props.dishId, ratingChecked, values.author, values.comment);\n      this.props.resetFeedbackForm();\n      // event.preventDefault();\n  }\n\n  handleBlur = (field) => (evt) => {\n      this.setState({\n          touched:  { ...this.state.touched, [field]: true}\n      })\n  }\n\n  validate(author, comment, rating ){\n      const errors = {\n          author: '',\n          comment: '',\n          rating: ''\n      }\n      if(this.state.touched.author && author.length < 3)\n          errors.author = 'Name should be >= 3 chars'\n      else if(this.state.touched.author && author.length > 10)\n          errors.author = 'Name should be <= 10 chars'\n\n      return errors\n  }\n\n    render(){\n        return(\n            <>\n            <Button outline onClick={this.toggleModal}>Submit Comment</Button>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal}>Submit Your Comment</ModalHeader>\n                <ModalBody>\n                <LocalForm model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"author\" md={2}>Author</Label>\n                        <Col md={10}>\n                            <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                placeholder=\"Author\"\n                                className=\"form-control\"\n                                validators={{\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\n                                }}\n                                 />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".author\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be greater than 2 characters',\n                                    maxLength: 'Must be 15 characters or less'\n                                }}\n                             />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"rating\" md={2}>Rating</Label>\n                        <Col md={10}>\n                            <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                placeholder=\"\"\n                                className=\"form-control\">\n                                   <option>1</option>\n                                   <option>2</option>\n                                   <option>3</option>\n                                   <option>4</option>\n                                   <option>5</option>\n                            </Control.select>\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"review\" md={2}>review</Label>\n                        <Col md={10}>\n                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                rows=\"3\" className=\"form-control\" validators={required} />\n                            <Errors className=\"text-danger\" model=\".comment\" show=\"touched\"\n                                messages={{ required: 'Required'}} />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Col md={{size:10, offset: 2}}>\n                            <Button type=\"submit\" color=\"primary\">\n                            Send Comment\n                            </Button>\n                        </Col>\n                    </Row>\n                </LocalForm>\n                </ModalBody>\n            </Modal>\n            </>\n        )\n    }\n}\n","import { Loading } from './LoadingComponent';\nimport React, { Component } from 'react';\nimport { Media, ListGroup, ListGroupItem } from 'reactstrap';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport CommentForm from './CommentForm';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n\n\nfunction RenderDish({dish}) {\n    return <p> {dish.name} {dish.description} </p>\n}\nfunction RenderComments({comments}) {\n    return comments.map((comment) => {\n        return (\n            <Stagger in>\n                {comments.map((comment) => {\n                    return (\n                        <Fade in>\n                        <li key={comment.id}>\n                        <p>{comment.comment}</p>\n                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\n                        </li>\n                        </Fade>\n                    );\n                })}\n                </Stagger>\n        )});\n}\n const  DishDetail = (props) => {\n\n     if (props.isLoading) {\n         return(\n             <div className=\"container\">\n                 <div className=\"row\">\n                     <Loading />\n                 </div>\n             </div>\n         );\n     }\n     else if (props.errMess) {\n         return(\n             <div className=\"container\">\n                 <div className=\"row\">\n                     <h4>{props.errMess}</h4>\n                 </div>\n             </div>\n         );\n     }\n     else if( props.dish === null ){\n        return (<></>)}\n    else{\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>{props.dish.name}</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 col-md-5 m-1\">\n                    <RenderDish dish={props.dish} />\n                    <FadeTransform\n                        in\n                        transformProps={{\n                            exitTransform: 'scale(0.5) translateY(-50%)'\n                        }}>\n                    <Card>\n                        <CardImg top src={baseUrl + props.dish.image} alt={props.dish.name} />\n                        <CardBody>\n                            <CardTitle>{props.dish.name}</CardTitle>\n                            <CardText>{props.dish.description}</CardText>\n                        </CardBody>\n                    </Card>\n                    </FadeTransform>\n                </div>\n                <div className=\"col-12 col-md-5 m-1\">\n                <RenderComments comments={props.comments} />\n                <CommentForm postComment={props.postComment} dishId={props.dish.id} resetFeedbackForm={props.resetFeedbackForm} />\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default DishDetail\n","import { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Button, Modal, ModalHeader, ModalBody,\n    Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport React, {Component} from 'react'\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n         this.toggleModal = this.toggleModal.bind(this);\n\n        this.handleLogin = this.handleLogin.bind(this);\n      }\n\n      toggleNav() {\n        this.setState({\n          isNavOpen: !this.state.isNavOpen\n        });\n      }\n      handleLogin(event) {\n          this.toggleModal();\n          alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n              + \" Remember: \" + this.remember.checked);\n          event.preventDefault();\n\n      }\n      toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n      }\n\n    render() {\n        return(\n            <div>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                            </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavItem>\n                            <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                        </NavItem>\n                    </Nav>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                        <FormGroup>\n                            <Label htmlFor=\"username\">Username</Label>\n                            <Input type=\"text\" id=\"username\" name=\"username\"\n                                innerRef={(input) => this.username = input} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label htmlFor=\"password\">Password</Label>\n                            <Input type=\"password\" id=\"password\" name=\"password\"\n                                innerRef={(input) => this.password = input}  />\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"checkbox\" name=\"remember\"\n                                innerRef={(input) => this.remember = input}  />\n                                Remember me\n                            </Label>\n                        </FormGroup>\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                    </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to='/home'>Home</Link></li>\n                        <li><Link to='/aboutus'>About Us</Link></li>\n                        <li><Link to='/menu'>Menu</Link></li>\n                        <li><Link to='/contactus'>Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nfunction RenderLeader({leaders}){\n    const leadersList = leaders.map((leader) => {\n        return (\n\n            <Media tag=\"li\">\n              <Media left href=\"#\">\n                <Media object data-src={baseUrl + leader.image + '/64x64'} alt={leader.name} />\n              </Media>\n              <Media body>\n                <Media heading>\n                  {leader.name}\n                </Media>\n                    {leader.designation}\n                    {leader.description}\n              </Media>\n            </Media>\n        );\n    });\n    return(\n        <>{leadersList}</>\n    )\n}\n\nfunction About(props) {\n\n\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <RenderLeader leaders={props.leaders} />\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n\nfunction RenderLeader({leaders}){\n    const leadersList = leaders.map((leader) => {\n        return (\n            <Fade in>\n            <Media tag=\"li\">\n              <Media left href=\"#\">\n                <Media object data-src={baseUrl + leader.image + '/64x64' } alt={leader.name} />{console.log(baseUrl + leader.image + '')}\n              </Media>\n              <Media body>\n                <Media heading>\n                  {leader.name}\n                </Media>\n                    {leader.designation}\n                    {leader.description}\n              </Media>\n            </Media>\n            </Fade>\n        );\n    });\n    return(\n        <>{leadersList}</>\n    )\n}\n\nfunction About(props) {\n\n\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Stagger in>\n                    <Media list>\n                        <RenderLeader leaders={props.leaders} />\n                    </Media>\n                    </Stagger>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;\n","import React from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle} from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n\n    if (isLoading) {\n        return(\n                <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n                <h4>{errMess}</h4>\n        );\n    }\n    else\n        return(\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n                    <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n\n}\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishErrMess}  />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leaders} isLoading={props.leadersLoading} errMess={props.leadersErrMess}  />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,\n            Button, Row, Col, Label } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: '',\n            agree: false,\n            contactType: 'Tel.',\n            message: '',\n            touched: {\n                firstname: false,\n                lastname: false,\n                telnum: false,\n                email: false\n            }\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        const message = target.message;\n\n        this.setState({\n          [name]: value\n        });\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        this.props.resetFeedbackForm()\n        // event.preventDefault();\n    }\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched:  { ...this.state.touched, [field]: true}\n        })\n    }\n\n    validate(firstname, lastname, telnum, email, message){\n        const errors = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: '',\n            message: ''\n        }\n        if(this.state.touched.firstname && firstname.length < 3)\n            errors.firstname = 'First Name should be >= 3 chars'\n        else if(this.state.touched.firstname && firstname.length > 10)\n            errors.firstname = 'First Name should be <= 10 chars'\n        if(this.state.touched.lastname && lastname.length < 3)\n            errors.lastname = 'Last Name should be >= 3 chars'\n        else if(this.state.touched.lastname && lastname.length > 10)\n            errors.lastname = 'Last Name should be <= 10 chars'\n        if(this.state.touched.message && message.length < 3)\n            errors.message = 'message should be >= 3 chars'\n        else if(this.state.touched.message && message.length > 100)\n            errors.message = 'message should be <= 10 chars'\n\n        const reg = /^\\d+$/;\n        if(this.state.touched.telnum && !reg.test(telnum))\n            errors.telnum='Tel Num should contain only numbers'\n\n        return errors\n    }\n\n    render(){\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email, this.state.message)\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                   <div className=\"col-12\">\n                      <h3>Send us your Feedback</h3>\n                   </div>\n                    <div className=\"col-12 col-md-9\">\n\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                            <Col md={10}>\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                    placeholder=\"First Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".firstname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                 />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                            <Col md={10}>\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                    placeholder=\"Last Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".lastname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                 />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                            <Col md={10}>\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                    placeholder=\"Tel. Number\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".telnum\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 numbers',\n                                        maxLength: 'Must be 15 numbers or less',\n                                        isNumber: 'Must be a number'\n                                    }}\n                                 />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\n                            <Col md={10}>\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, validEmail\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".email\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        validEmail: 'Invalid Email Address'\n                                    }}\n                                 />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"message\" md={2}>Feedback</Label>\n                            <Col md={10}>\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                    placeholder=\"message\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        minLength: minLength(3), maxLength: maxLength(100)\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".text\"\n                                    show=\"touched\"\n                                    messages={{\n                                        minLength: 'Must be greater than 3 characters',\n                                        maxLength: 'Must be 100 numbers or less'\n                                    }}\n                                 />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Col md={{size:10, offset: 2}}>\n                                <Button type=\"submit\" color=\"primary\">\n                                Send Feedback\n                                </Button>\n                            </Col>\n                        </Row>\n                    </LocalForm>\n                    </div>\n               </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;\n","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n    return fetch(baseUrl + 'leaders')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n};\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leader) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leader\n});\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comment) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.POST_FEEDBACK,\n    payload: feedback\n});\n\nexport const postFeedback = (firstname, lastname, telnum, email, message) => (dispatch) => {\n\n    const newFeedback = {\n        firstName: firstname,\n        lastName: lastname,\n        contactTel: telnum,\n        email: email,\n        feedback: message\n    };\n    newFeedback.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addFeedback(response)))\n    .catch(error =>  { console.log('post feedbacks', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\n};\n\nexport const feedbackFailed = () => ({\n    type: ActionTypes.FEEDBACK_FAILED\n});\n\nexport const feedbackLoading = (errmess) => ({\n    type: ActionTypes.FEEDBACK_LOADING,\n    payload: errmess\n});\n","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const FEEDBACK_FAILED = 'FEEDBACK_FAILED';\nexport const FEEDBACK_LOADING = 'FEEDBACK_LOADING';\nexport const POST_FEEDBACK = 'POST_FEEDBACK';\n","import React, {Component} from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport Menu from './MenuComponent';\n\nimport DishDetail from './DishdetailComponent'\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Test from './Test';\nimport About from './AboutComponent';\nimport Home from './HomeComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport Contact from './ContactComponent';\nimport { COMMENTS } from '../shared/comments';\nimport { PROMOTIONS } from '../shared/promotions';\n\nimport { connect } from 'react-redux';\nimport { postFeedback, postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchDishes: () => { dispatch(fetchDishes())},\n  fetchLeaders: () => { dispatch(fetchLeaders())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  postFeedback:  (firstname, lastname, telnum, email, message) => dispatch(postFeedback(firstname, lastname, telnum, email, message))\n});\n\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dishes: [],\n      comments: [],\n      promotions: [],\n      leaders: []\n    };\n  }\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchLeaders();\n        this.props.fetchPromos();\n    }\n    onDishSelect(dishId) {\n        this.setState({ selectedDish: dishId});\n    }\n\n      render() {\n\n          const HomePage = () => {\n            return(\n\n                          <Home\n                              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                              dishesLoading={this.props.dishes.isLoading}\n                              dishErrMess={this.props.dishes.errMess}\n                              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                              promoLoading={this.props.promotions.isLoading}\n                              promoErrMess={this.props.promotions.errMess}\n\n                              leaders={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                              leadersLoading={this.props.leaders.isLoading}\n                              leadersErrMess={this.props.leaders.errMess}\n                          />\n\n            );\n          }\n\n          const DishWithId = ({match}) => {\n              const tmp1 = this.props.comments.comments\n              const tmp2 = this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))\n              console.log(tmp1)\n              console.log(tmp2)\n            return(\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n                  isLoading={this.props.dishes.isLoading}\n                  errMess={this.props.dishes.errMess}\n                  comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n                  commentsErrMess={this.props.comments.errMess}\n                  postComment={this.props.postComment}\n                  resetFeedbackForm={this.props.resetFeedbackForm}\n                />\n            );\n          };\n\n              return (\n                <div>\n                  <Header />\n                  <div>\n                  <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                      <Switch location={this.props.location}>\n                          <Route path='/home' component={HomePage} />\n                          <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders.leaders} />} />\n                          <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                          <Route path='/menu/:dishId' component={DishWithId} />\n                          <Route exact path='/contactus' component={() => <Contact postFeedback={this.props.postFeedback}  resetFeedbackForm={this.props.resetFeedbackForm} />} />\n                          <Route path='/menu/test' component={Test} />\n                          <Redirect to=\"/home\" />\n                      </Switch>\n                    </CSSTransition>\n                  </TransitionGroup>\n                  </div>\n                  <Footer />\n                </div>\n              );\n            }\n          }\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import { DISHES } from '../shared/dishes';\nimport * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = { isLoading: true,\n    errMess: null,\n    dishes:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return {...state, errMess: null, comments: action.payload};\n\n    case ActionTypes.COMMENTS_FAILED:\n      return {...state, errMess: action.payload};\n\n      case ActionTypes.ADD_COMMENT:\n          var comment = action.payload;\n          return { ...state, comments: state.comments.concat(comment)};\n\n    default:\n      return state;\n  }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = { isLoading: true,\n                                        errMess: null,\n                                        promotions:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n          return state;\n      }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = { isLoading: true,\n    errMess: null,\n    leaders:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n        default:\n          return state;\n      }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};\n\n\nexport const Feedback = (state = { errMess: null, feedback: InitialFeedback}, action) => {\n  switch (action.type) {\n    case ActionTypes.FEEDBACK_LOADING:\n      return {...state, errMess: null, feedback: action.payload};\n\n    case ActionTypes.FEEDBACK_FAILED:\n      return {...state, errMess: action.payload};\n\n      case ActionTypes.POST_FEEDBACK:\n          var feedback = action.payload;\n          return { ...state, feedback: state.feedback.concat(feedback)};\n\n    default:\n      return state;\n  }\n};\n","import Main from './components/MainComponent';\nimport React from 'react';\nimport './App.css'\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n        <Provider store={store}>\n          <BrowserRouter>\n            <div className=\"App\">\n              <Main />\n            </div>\n          </BrowserRouter>\n        </Provider>\n    );\n  }\n}\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { createForms } from 'react-redux-form';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}